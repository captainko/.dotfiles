#!/bin/bash
export DOTFILES=$HOME/.dotfiles
export EDITOR="/usr/bin/vim"
# highlight for less
export LESS='-R'
export LESS_TERMCAP_mb=$'\e[1;31m'   # begin bold
export LESS_TERMCAP_md=$'\e[1;94m'   # begin blink
export LESS_TERMCAP_so=$'\e[01;33m'  # begin reverse video
export LESS_TERMCAP_us=$'\e[1;4;90m' # begin underline
export LESS_TERMCAP_me=$'\e[0m'      # reset bold/blink
export LESS_TERMCAP_se=$'\e[0m'      # reset reverse video
export LESS_TERMCAP_ue=$'\e[0m'      # reset underline
# export GROFF_NO_SGR=1                 # for konsole and gnome-terminal
# export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
# export LESS=' -R '
PATH="$PATH:$XDG_CONFIG_HOME/emacs/bin/"
# emacs

# custom env
# docker
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
export MACHINE_STORAGE_PATH="$XDG_DATA_HOME/docker-machine"
# rust
export CARGO_HOME="${XDG_DATA_HOME}/cargo"
# go
GOPATH="$XDG_DATA_HOME/go"
export GOBIN="$GOPATH/bin"
export GOPATH=$GOPATH:"$HOME"/Documents/go_projects
export GO111MODULE=on
PATH=$PATH:/usr/local/go/bin:$GOBIN
# deno
export DENO_INSTALL="$XDG_DATA_HOME/deno"
PATH="$DENO_INSTALL/bin:$PATH"
# bun
export BUN_INSTALL="$HOME/.bun"
PATH="$BUN_INSTALL/bin:$PATH"
# wine
#[ ! -d "$XDG_DATA_HOME/wineprefixes" ] && mkdir -p "$XDG_DATA_HOME"/wineprefixes
#export WINEPREFIX="$XDG_DATA_HOME"/wineprefixes/default

# xathority
export XAUTHORITY="$XDG_RUNTIME_DIR"/Xauthority

# wget
export WGETRC="$XDG_CONFIG_HOME/wgetrc"
[ ! -f "$XDG_CONFIG_HOME"/wgetrc ] && echo hsts-file = "$XDG_CACHE_HOME/wget-hsts" >>"$XDG_CONFIG_HOME/wgetrc"

# nvidia
export CUDA_CACHE_PATH="$XDG_CACHE_HOME/nv"
alias nvidia-settings='nvidia-settings --config="$XDG_CONFIG_HOME/nvidia/settings"'

# npm
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
PATH="$PATH:./node_modules/.bin/"

# less
export LESSKEY="$XDG_CONFIG_HOME/less/lesskey"
export LESSHISTFILE="$XDG_CACHE_HOME/less/history"
[ ! -d "$XDG_CACHE_HOME/less" ] && mkdir -p "$XDG_CACHE_HOME/less"
# export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
# export LESS=' -R '

# input
export INPUTRC="$XDG_CONFIG_HOME/readline/inputrc"
[ ! -d "$XDG_CONFIG_HOME/readline" ] && mkdir "$XDG_CONFIG_HOME/readline" && touch "$INPUTRC"

# nuget
export NUGET_PACKAGES="$XDG_CACHE_HOME/NuGetPackages"

# gnu
export GNUPGHOME="$XDG_DATA_HOME/gnupg"

# java
# export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
# export JAVA_OPTS='-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee'
# gradle
export GRADLE_USER_HOME="$XDG_DATA_HOME/gradle"
# android
export ANDROID_SDK_HOME="$XDG_CONFIG_HOME/android"
#export ADB_VENDOR_KEY="$XDG_CONFIG_HOME"/android
#export ADB_VENDOR_KEYS="$XDG_CONFIG_HOME"/android

# IDEA
[[ -s /opt/idea/bin/ ]] && PATH="$PATH:/opt/idea/bin"
# android-studio
export ANDROID_HOME="$HOME/.tools/Android/sdk"
PATH="$PATH:$ANDROID_HOME/emulator"
PATH="$PATH:$ANDROID_HOME/tools"
PATH="$PATH:$ANDROID_HOME/tools/bin"
PATH="$PATH:$ANDROID_HOME/platform-tools"

# xinit
#export XINITRC="$XDG_CONFIG_HOME"/X11/xinitrc
#export XSERVERRC="$XDG_CONFIG_HOME"/X11/xserverrc
#startx "$XDG_CONFIG_HOME/X11/xinitrc" -- "$XDG_CONFIG_HOME/X11/xserverrc" vt1 &

# lua
PATH="$PATH:$HOME/.local/src/luarocks/lua_modules/bin"

# messon
export PKG_CONFIG_PATH=/usr/lib/pkgconfig
export CMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/cmake/

# flutter
PATH="$PATH:$HOME/.local/src/flutter/bin"
# flutter-pub
PATH="$PATH:$HOME/.pub-cache/bin"

# mssql
PATH="$PATH:/opt/mssql-tools/bin"
PATH="$PATH:/opt/mssql/bin"

# CUDA
PATH="$PATH:/usr/local/cuda/bin"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/extras/CUPTI/lib64"

# tmux
export TMUX_PLUGIN_PATH=$XDG_CONFIG_HOME/tmux/plugins

# fzf
export FZF_COMPLETION_TRIGGER=';;'
export FZF_DEFAULT_COMMAND='fd --type file'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# PostgreSQL
[ ! -d "$XDG_CACHE_HOME/pg" ] && mkdir "$XDG_CACHE_HOME/pg"
[ ! -d "$XDG_CONFIG_HOME/pg" ] && mkdir "$XDG_CONFIG_HOME/pg"
export PSQLRC="$XDG_CONFIG_HOME/pg/psqlrc"
export PSQL_HISTORY="$XDG_CACHE_HOME/pg/psql_history"
export PGPASSFILE="$XDG_CONFIG_HOME/pg/pgpass"
export PGSERVICEFILE="$XDG_CONFIG_HOME/pg/pg_service.conf"

# Redis
export REDISCLI_HISTFILE="$XDG_DATA_HOME"/redis/rediscli_history
export REDISCLI_RCFILE="$XDG_CONFIG_HOME"/redis/redisclirc

# Rust
export RUSTUP_HOME="$XDG_DATA_HOME"/rustup

# VSCode
export VSCODE_PORTABLE="$XDG_DATA_HOME"/vscode

# Chrome Bin
export CHROME_BIN=/usr/bin/brave-browser-stable
export UNCRUSTIFY_CONFIG="$XDG_CONFIG_HOME/uncrustify/default.cfg"

# prisma
export CHECKPOINT_DISABLE=1 # opt-out of data collection

[[ -n "$(command -v fnm)" ]] && fnm env --use-on-cd | source /dev/stdin

# sdk
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
PATH="$PATH:$HOME/.rvm/bin"

# Hashkell
[ -f "/home/cko/.ghcup/env" ] && . "/home/cko/.ghcup/env" # ghcup-env

# dotnet
export DOTNET_CLI_TELEMETRY_OPTOUT=1
# finally
export XMONAD_CACHE_DIR="$XDG_CACHE_HOME/xmonad"
export XMONAD_CONFIG_DIR="$XDG_CONFIG_HOME/xmonad"
export XMONAD_DATA_DIR="$XDG_DATA_HOME/xmonad"
[ ! -d "$XMONAD_CACHE_DIR" ] && mkdir -p "$XMONAD_CACHE_DIR"
[ ! -d "$XMONAD_DATA_DIR" ] && mkdir -p "$XMONAD_DATA_DIR"
[ ! -d "$XMONAD_CONFIG_DIR" ] && mkdir -p "$XMONAD_CONFIG_DIR"

# flatpack
XDG_DATA_DIRS="$XDG_DATA_DIRS:/var/lib/flatpak/exports/share:$HOME/.local/share/flatpak/exports/share"

export XDG_DATA_DIRS
export PATH="$PATH"
